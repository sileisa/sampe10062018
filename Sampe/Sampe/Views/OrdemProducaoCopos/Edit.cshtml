@model Sampe.Models.OrdemProducaoCopo

@{
	ViewBag.Title = "Edit";
	var cores = ViewBag.Cores;
}
<script>
	$(document).ready(function () {
		$("#add").click(function () {
			$("#esp").append('<tr><td><select class="form-control" id="Cor" name="Cor">@foreach (var x in cores){<option value="@x.CorId">@x.NomeCor</option>}</select></td><td>@Html.EditorFor(model => model.EspecificacaoCopo.UniProd, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.EspecificacaoCopo.LoteMaster, new { htmlAttributes = new { @class = "form-control" } })</td><td></td></tr>')
		});

		$("#adc").click(function () {
			$("#pausa").append('<tr id="linha2"><td>@Html.EditorFor(model => model.ParadaCopo.HoraParada, new { htmlAttributes = new { type = "time", @class = "form-control" } })</td><td>@Html.EditorFor(model => model.ParadaCopo.HoraRetorno, new { htmlAttributes = new { type = "time", @class = "form-control" } })</td><td><select class="form-control" id="Motivo" name="Motivo"><option value="">Selecione o Motivo</option><option value="Manutenção">Manutenção</option><option value="Troca de Molde">Troca de Molde</option><option value="Descanso">Descanso</option><option value="Outros (Obs)">Outros (Obs)</option></select>@Html.ValidationMessageFor(model => model.ParadaCopo.Motivo, "", new { @class = "text-danger" })</td><td>@Html.EditorFor(model => model.ParadaCopo.Observacoes, new { htmlAttributes = new { @class = "form-control" } })</td><td></td></tr>')
		});

		$("#esp").on('dblclick ', 'tr', function () {
			$(this).remove();
		});

		$("#pausa").on('dblclick ', 'tr', function () {
			$(this).remove();
		});

		if ($("#MateriaPrima").val() == "Refugo") {
			$("#MateriaPrima").prop("disabled", true)
			$("#MPLote").prop("disabled", true);
			$("#MPLote").val("Refugo");
		}
		else {
			$("#MPLote").prop("disabled", false);
			$("#MPLote").val("");
		}

		$("#ExpectativaId").click(function () {
			if ($(this).text != "Copo") {
				$($(this).val).prop("disabled", true);
			}
		});
	});
</script>
<h2>Edit</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

<div class="form-horizontal">
	<h4>OrdemProducaoCopo</h4>
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	@Html.HiddenFor(model => model.CodigoIdentificador)

	<div class="row">
		<div class="col-lg-4">
			<label>Materia Prima</label>
			<input type="text" value="@Model.MateriaPrima" name="MateriaPrima" class="form-control" readonly />
		</div>
		<div class="col-lg-4">
			<label>Poduto</label>
			@Html.DropDownList("ExpectativaId", null, "Selecione o Produto", htmlAttributes: new { disabled = "disabled", @class = "form-control" })
			@Html.HiddenFor(model => model.ExpectativaId)
			@Html.ValidationMessageFor(model => model.ExpectativaId, "", new { @class = "text-danger" })
		</div>
		<div class="col-lg-4">
			@Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2" })
			@Html.EditorFor(model => model.Data, new { htmlAttributes = new { type = "date", @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
		</div>
	</div>
	<br />
	<div class="row">
		<div class="col-md-6">
			@Html.LabelFor(model => model.ProdIncio, htmlAttributes: new { Type = "Time", @class = "control-label col-md-2" })
			@Html.EditorFor(model => model.ProdIncio, new { htmlAttributes = new { Type = "Time", @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.ProdIncio, "", new { Type = "Time", @class = "text-danger" })
		</div>
		<div class="col-md-6">
			@Html.LabelFor(model => model.ProdFim, htmlAttributes: new { Type = "Time", @class = "control-label col-md-2" })
			@Html.EditorFor(model => model.ProdFim, new { htmlAttributes = new { Type = "Time", @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.ProdFim, "", new { Type = "Time", @class = "text-danger" })
		</div>
	</div>
	<br />

	<div class="row">
		<div class="col-lg-4">
			@Html.LabelFor(model => model.Maquina, htmlAttributes: new { @class = "control-label col-md-2" })
			@Html.DropDownList("MaquinaId", new SelectList(ViewBag.MaquinaId, "MaquinaId", "NomeMaquina"), "Selecione a Maquina", htmlAttributes: new { @class = "form-control" })
			@Html.HiddenFor(model => model.MaquinaId)
			@Html.ValidationMessageFor(model => model.MaquinaId, "", new { @class = "text-danger" })
		</div>
		<div class="col-lg-4">
			@Html.LabelFor(model => model.MPLote, htmlAttributes: new { @class = "control-label col-md-2" })
			@Html.EditorFor(model => model.MPLote, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.MPLote, "", new { @class = "text-danger" })
		</div>
		<div class="col-lg-4">
			@Html.LabelFor(model => model.MPConsumo, htmlAttributes: new { @class = "control-label col-md-2" })
			@Html.EditorFor(model => model.MPConsumo, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.MPConsumo, "", new { @class = "text-danger" })
		</div>
	</div>
	<br />
	<div class="row">
		<div class="col-lg-4">
			@Html.LabelFor(model => model.TempAgua, htmlAttributes: new { @class = "control-label col-md-2" })
			@Html.EditorFor(model => model.TempAgua, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.TempAgua, "", new { @class = "text-danger" })
		</div>
		<div class="col-lg-4">
			@Html.LabelFor(model => model.NivelOleo, htmlAttributes: new { @class = "control-label col-md-2" })
			@Html.EditorFor(model => model.NivelOleo, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.NivelOleo, "", new { @class = "text-danger" })
		</div>
		<div class="col-lg-4">
			@Html.LabelFor(model => model.RefugoKg, htmlAttributes: new { @class = "control-label col-md-2" })
			@Html.EditorFor(model => model.RefugoKg, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.RefugoKg, "", new { @class = "text-danger" })
		</div>
	</div>
	<br />

	<div class="row">
		<div class="col-lg-6">
			@Html.LabelFor(model => model.ContadorInicial, htmlAttributes: new { @class = "control-label col-md-2" })
			@Html.EditorFor(model => model.ContadorInicial, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.ContadorInicial, "", new { @class = "text-danger" })
		</div>
		<div class="col-lg-6">
			@Html.LabelFor(model => model.ContadorFinal, htmlAttributes: new { @class = "control-label col-md-2" })
			@Html.EditorFor(model => model.ContadorFinal, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.ContadorFinal, "", new { @class = "text-danger" })
		</div>
	</div>
	<br />

	<div class="row">
		<table class="table table-bordered table-responsive">
			<thead>
				<tr>
					<th>Cor</th>
					<th>Unidades Produzidas</th>
					<th>Lote Master</th>
					<th></th>
				</tr>
			</thead>
			<tbody id="esp">
				@foreach (var item in Model.EspecificacoesCopo)
				{
					<tr id="linha">
						<td>@item.Cor.NomeCor</td>
						<td>@item.UniProd</td>
						<td>@item.LoteMaster</td>
						<td></td>
					</tr>
				}
			</tbody>
		</table>
		<a class="btn btn-default btn-sm" id="add"><span class="glyphicon glyphicon-plus"></span></a>
	</div>
	<br />

	<div class="row">
		<table class="table table-bordered">
			<thead>
				<tr>
					<th>Hora Inicio</th>
					<th>Hora Retorno</th>
					<th>Motivo</th>
					<th>Observações</th>
					<th></th>
				</tr>
			</thead>
			<tbody id="pausa">
				@foreach (var item in Model.ParadasCopo)
				{
					<tr id="linha2">
						<td>@item.HoraParada</td>
						<td>@item.HoraRetorno</td>
						<td>@item.Motivo</td>
						<td>@item.Observacoes</td>
						<td></td>
					</tr>
				}
			</tbody>
		</table>
		<a class="btn btn-default btn-sm" id="adc"><span class="glyphicon glyphicon-plus"></span></a>
	</div>
	<br />
	<div class="row">
		<table class="table table-bordered">
			<thead>
				<tr>
					<th>Hora</th>
					<th>Ciclo</th>
					<th>Peso da Peça</th>
					<th>Inspeção</th>
					<th>Assinatura</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model.ControleDeQualidadeCopos)
				{
					<tr>
						<td>@item.Hora</td>
						<td>@item.Ciclo</td>
						<td>@item.PesoDaPeca | @item.PesoDaPeca2</td>
						<td>@Html.DisplayFor(model => model.ControleDeQualidadeCopo.Peso) Peso @Html.DisplayFor(model => model.ControleDeQualidadeCopo.Cor) Cor @Html.DisplayFor(model => model.ControleDeQualidadeCopo.Dimensao) Dimensão</td>
						<td>@item.Usuario.NomeUsuario</td>
						<td></td>
					</tr>
				}
			</tbody>
		</table>
	</div>
	<br /><br />
	<div class="row col-lg-12 col-sm-12">
		@if (@Session["Hierarquia"].ToString() == "Acesso Supervisor")
		{
			<div class="checkbox" id="check">
				@if (Model.Status == false)
				{
					@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "checkbox" } })
					<p>Validação do Supervisor</p>

				}
				else
				{
					@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "checkbox", @readonly = true } })
					<p>Validação do Supervisor</p>
				}
			</div>
			@Html.HiddenFor(model => model.Status)
		}
		else
		{
			<label>Validação do Supervisor</label>
			@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "checkbox", disabled = "disabled" } })

		}
	</div>
	<br /><br />


	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" value="Save" class="btn btn-default" />
		</div>
	</div>
</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>
